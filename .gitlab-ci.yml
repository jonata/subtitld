# snap:amd64:
#   image:
#     name: cibuilds/snapcraft:core20
#   type: deploy
#   script:
#   - export VERSION_NUMBER=`date +%y.%m.%d.%H%M`
#   - snapcraft
#   - echo ${SNAPCRAFT_LOGIN_FILE} | base64 --decode --ignore-garbage > snapcraft.login
#   - snapcraft login --with snapcraft.login
#   - snapcraft upload *.snap --release beta
#   artifacts:
#     paths:
#     - subtitld*.snap
#     expire_in: 1 week
#   only:
#   - master

# snap-edge:amd64:
#   image:
#     name: cibuilds/snapcraft:core20
#   type: deploy
#   script:
#   - export VERSION_NUMBER=`date +%y.%m.%d.%H%M`
#   - mv snapcraft-edge.yaml snapcraft.yaml
#   - snapcraft
#   - echo ${SNAPCRAFT_LOGIN_FILE} | base64 --decode --ignore-garbage > snapcraft.login
#   - snapcraft login --with snapcraft.login
#   - snapcraft upload *.snap --release edge
#   artifacts:
#     paths:
#     - subtitld*.snap
#     expire_in: 1 week
#   only:
#   - master

appimage-amd64:
  image:
    name: appimagecrafters/appimage-builder:latest
  type: deploy
  before_script:
    - apt-get update -qy
    # - apt-get install -y software-properties-common sshpass
    - apt-get install -y sshpass python3-pip fontconfig-config
    - python3 -m pip install --upgrade pip
    # - add-apt-repository ppa:mc3man/bionic-media -y
    # - apt-get update -qy
    # - apt-get install -y git wget python3-pip libglu1-mesa libmpv1 ffmpeg libmpv-dev libespeak-dev
    # - pip3 install --upgrade git+https://www.opencode.net/azubieta/appimagecraft.git
    - export VERSION_NUMBER=`date +%y.%m.%d.%H%M`
    # - python3 -m pip install --upgrade pip
    - python3 -m pip install -r requirements.txt
    # - python3 -m pip uninstall -y enum34
    # - python3 -m pip install pyinstaller==3.6
    - python3 -m pip install pyinstaller
    - mkdir AppDir
  script:
    - pyinstaller subtitld_linux.spec
    - mv dist/subtitld AppDir/subtitld
    - ls AppDir/subtitld
    - mkdir -p /usr/share/icons/hicolor/512x512/
    - cp AppDir/subtitld/graphics/subtitld.png /usr/share/icons/hicolor/512x512/.
    - appimage-builder --skip-test
    - export SSHPASS=$USER_PASS
    - sshpass -e scp -o stricthostkeychecking=no *.AppImage jonata@jonata.org:/home/jonata/subtitld.jonata.org/appimage/
  artifacts:
    paths:
      - '*.AppImage'
    expire_in: 1 week
  only:
  - master


# windows-nsis:
#   image: schnouki/pyinstaller-windows-ci:python3
#   type: deploy
#   script:
#   - export VERSION_NUMBER=`date +%y.%m.%d.%H%M`
#   - apt-get update -qy
#   - apt-get install -y nsis unzip openssh-client sshpass p7zip-full curl libespeak-dev xvfb espeak-data
#   - wine python -m pip install -U pip
#   - wine pip3 install -U setuptools
#   - wine pip3 install -r requirements.txt
#   - wget https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.zip
#   - unzip ffmpeg-release-essentials.zip
#   - wget --no-check-certificate https://mpv.srsfckn.biz/mpv-dev-latest.7z
#   - 7z x -ompv mpv-dev-latest.7z
#   - wine pip uninstall -y enum34
#   - wine PyInstaller subtitld_win.spec
#   - makensis subtitld_win.nsi
#   - export SSHPASS=$USER_PASS
#   - sshpass -e scp -o stricthostkeychecking=no Subtitld*Installer.exe jonata@jonata.org:/home/jonata/subtitld.jonata.org/packages/
#   - "curl -d '{ \"number\":\"'\"$VERSION_NUMBER\"'\", \"is_stable\":\"False\" }' -H \"Content-Type: application/json\" -X POST https://api2.jonata.org/subtitld/windows_version\n"
#   artifacts:
#     paths:
#     - Subtitld*Installer.exe
#     expire_in: 1 week
#   only:
#   - master


# flatpak-amd64:
#   image:
#     name: flatpak/flatpak-builder:gnome-3-28
#   type: deploy
#   before_script:
#   - export VERSION_NUMBER=`date +%y.%m.%d.%H%M`
#   script:
#   - flatpak install flathub org.kde.Platform//5.12
#   - flatpak-builder build-dir org.jonata.Subtitld.json --force-clean
#   artifacts:
#     paths:
#       - '*.flatpak'
#     expire_in: 1 week
#   only:
#   - master



